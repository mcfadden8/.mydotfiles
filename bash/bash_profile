#!/bin/bash

stty erase 

date; echo "bash_profile entered"
export MJM_EXIT_EARLY="no"
if [[ $MJM_EXIT_EARLY == "no" ]]; then
  export MJM_HOST=`hostname -s | sed -e "s/[0-9]*$//"`

  date; echo "MJM_HOST is: $MJM_HOST"
  if [[ $MJM_HOST == "rz"* ]]; then
    export MJM_WS=/usr/workspace/wsrzd/martymcf
  elif [[ $MJM_HOST == "cztb" ]]; then
    export MJM_WS=/home/martymcf
  else
    if [ -d /usr/workspace/wsb/martymcf ]; then
      export MJM_WS=/usr/workspace/wsb/martymcf
    else
      export MJM_WS=$HOME
    fi
  fi
  date; echo "MJM_WS is: $MJM_WS"

  export MJM_SCRATCH=$MJM_WS

  if [[ $MJM_HOST == "rz"* ]]; then
    for scratchdir in gscratchrzm gpfs1
    do
      date; echo "Checking MJM_SCRATCH candidate: /p/$scratchdir/martymcf"
      if [[ -d /p/$scratchdir/martymcf ]]; then
        export MJM_SCRATCH=/p/$scratchdir/martymcf
        break
      fi
    done
  elif [[ $MJM_HOST == "cz"* ]]; then
    for scratchdir in gscratchr gpfs1
    do
      date; echo "Checking MJM_SCRATCH candidate: /p/$scratchdir/martymcf"
      if [[ -d /p/$scratchdir/martymcf ]]; then
        export MJM_SCRATCH=/p/$scratchdir/martymcf
        break
      fi
    done
  fi

  date; echo "MJM_SCRATCH=$MJM_SCRATCH"

  if [ ! -d $HOME/.mydotfiles/.arch_cache ]; then
    mkdir -p $HOME/.mydotfiles/.arch_cache
  fi

  if [ -d $MJM_WS/spack/bin ]; then
    . $MJM_WS/spack/share/spack/setup-env.sh
    export PATH=$MJM_WS/spack/bin:$PATH
  fi

  if [ -z ${SYS_TYPE+x} ]; then 
    if [ ! -f $HOME/.mydotfiles/.arch_cache/$MJM_HOST ]; then
      if [ -f $MJM_WS/spack/bin/spack ]; then
        $MJM_WS/spack/bin/spack arch > $HOME/.mydotfiles/.arch_cache/$MJM_HOST
        export MJM_ARCH=`cat $HOME/.mydotfiles/.arch_cache/$MJM_HOST`
      else
        export MJM_ARCH=`uname -m`
      fi
    else
      export MJM_ARCH=`cat $HOME/.mydotfiles/.arch_cache/$MJM_HOST`
    fi
  else
    export MJM_ARCH=$SYS_TYPE
  fi
  date; echo "MJM_ARCH=$MJM_ARCH"

  if [ -d $HOME/.bin/$MJM_ARCH.$MJM_HOST ]; then
    export MJM_SPACK=$HOME/.bin/$MJM_ARCH.$MJM_HOST
    export MJM_BIN=$MJM_SPACK/bin
  else
    export MJM_SPACK=$HOME/.bin/$MJM_ARCH
    export MJM_BIN=$MJM_SPACK/bin
  fi

  if [ -f /etc/toss-release ]; then
      MJM_TOSSVERSION=`cat /etc/toss-release`
      MJM_TOSSVERSION=${MJM_TOSSVERSION#*-}
      MJM_TOSSVERSION=${MJM_TOSSVERSION#*-}
      export MJM_TOSSVERSION=${MJM_TOSSVERSION%%.*}
  else
      export MJM_TOSSVERSION=0
  fi

  export SSH_ASKPASS=""
  export EDITOR=vim

  export INSTALLDIR=$HOME/.sessions/$MJM_HOST/install/$MJM_ARCH/install
  export INSTALLDIR2=$INSTALLDIR".2"
  export BUILDDIR=$HOME/.sessions/$MJM_HOST/build/$MJM_ARCH
  export SRCDIR=$HOME/.sessions/$MJM_HOST/src

  ##
  if [ -e $HOME/.mydotfiles/bashenv/modules.$MJM_HOST ]; then
      date; echo "Adding Modules for $MJM_HOST"
      . $HOME/.mydotfiles/bashenv/modules.$MJM_HOST
  fi

  if [ -e $HOME/.mydotfiles/bashenv/modules.$SYS_TYPE ]; then
      date; echo "Adding Modules for $SYS_TYPE"
      . $HOME/.mydotfiles/bashenv/modules.$SYS_TYPE
  fi

  if [ -e $HOME/.bashrc ]; then
      date; echo "Doing RC"
    . $HOME/.bashrc
  fi

  for d in $HOME/.bin/$MJM_ARCH; do
    if [ ! -d $d ]; then
      if [ ! -h $d ]; then
        mkdir -p $d
      fi
    fi
  done

  export LD_LIBRARY_PATH=$HOME/.sessions/$MJM_HOST/install/$MJM_ARCH/install/lib:$LD_LIBRARY_PATH
  export PATH=$HOME/.sessions/$MJM_HOST/install/$MJM_ARCH/install/bin:$MJM_BIN:$PATH

  ulimit -c unlimited

  if shopt | grep -q direxpand ; then 
    shopt -s direxpand
  fi

  SSH_ENV="$HOME/.ssh/environment"

  # Cause ctest to always produce output when/if
  # ctest tests fail.
  #
  export CTEST_OUTPUT_ON_FAILURE=TRUE

  if [ -z ${SYS_TYPE+x} ]; then echo "Not a TOSS System"; else echo "SYS_TYPE='$SYS_TYPE'"; fi

  date; echo "Setting my project"
  myproject=`current_project`

  . $HOME/spackload
  zsh -i
fi

