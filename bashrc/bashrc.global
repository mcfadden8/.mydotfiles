function functions {
  typeset -F
}

function init_dots {
  (cd $HOME/.mydotfiles; git pull)
}

function update_dots {
  (cd $HOME/.mydotfiles; git pull)
}

function init_vim {
  rm -rf $HOME/.vim
  ln -s $HOME/.mydotfiles/vim $HOME/.vim
}

. $HOME/.mydotfiles/bashrc/.bash_git

#
# MJM_HOST has been defined and exported by .bash_profile
#
if [ -f $HOME/bashenv/rc.$MJM_HOST ]; then
    . $HOME/bashenv/rc.$MJM_HOST
elif [ -f $HOME/bashenv/rc.default ]; then
    . $HOME/bashenv/rc.default
fi

if [ -f $HOME/.vim/env ]; then
    . $HOME/.vim/env
fi

force_color_prompt=yes
alias a=alias

if [ "`uname -s`" = "Darwin" ]; then
  alias d="ls -sFG"
  alias la="ls -alG"
  alias lt="ls -ltG"
else
  alias d="ls -sF --color"
  alias la="ls -al --color"
  alias lt="ls -lt --color"
fi
alias C=clear
alias f=pushd
alias b=popd
alias h=history
alias J="jobs -l"
alias vi=vim

# TOSS3 Clusters on CZ
# Borax(Intel), 48 nodes, B654, Serial
# Opal, 192 nodes, B451, Serial (LC Testing)
# Quartz(Intel), 2688 nodes, B654, Serial
alias cztoss="ssh quartz"

# TOSS3 Clusters on RZ
# RZGenie(Intel), 48 nodes, B451, Serial
# RZTopaz(Intel), 768 nodes, B654, Serial (LC Testing)
# RZTrona(Intel), 2688 nodes, B654, Serial
alias rztoss="ssh rztrona"

# shopt -s histappend                       # append history file
# export PROMPT_COMMAND="history -a"        # update histfile after every command
#

prompt_command () {
    if [ $? -eq 0 ]; then # set an error string for the prompt, if applicable
        ERRPROMPT=" "
    else
        ERRPROMPT='->($?) '
    fi
    if [ "\$(type -t __git_ps1)" ]; then # if we're in a Git repo, show current branch
        BRANCH="\$(__git_ps1 '[ %s ] ')"
    fi
    local TIME=`fmt_time` # format time for prompt string
    local LOAD=`uptime|awk '{min=NF-2;print $min}'`
    local GREEN="\[\033[0;32m\]"
    local CYAN="\[\033[0;36m\]"
    local BCYAN="\[\033[1;36m\]"
    local BLUE="\[\033[0;34m\]"
    local GRAY="\[\033[0;37m\]"
    local DKGRAY="\[\033[1;30m\]"
    local WHITE="\[\033[1;37m\]"
    local RED="\[\033[0;31m\]"
    # return color to Terminal setting for text color
    local DEFAULT="\[\033[0;39m\]"
    # set the titlebar to the last 2 fields of pwd
    local TITLEBAR='\[\e]2;`pwdtail`\a'
    local TABNAME="\033]0;${HOSTNAME%%.*}\007"
    export PS1="\[${TABNAME}\]\[${TITLEBAR}\]${CYAN}[ ${BCYAN}\u${GREEN}@${BCYAN}\
\h${DKGRAY}(${LOAD}) ${WHITE}${TIME} ${CYAN}]${RED}$ERRPROMPT${GRAY}\
\w\n${GREEN}${BRANCH}${DEFAULT}$ "

}
PROMPT_COMMAND=prompt_command

fmt_time () { #format time just the way I likes it
    if [ `date +%p` = "PM" ]; then
        meridiem="pm"
    else
        meridiem="am"
    fi
    date +"%l:%M:%S$meridiem"|sed 's/ //g'
}
pwdtail () { #returns the last 2 fields of the working directory
    pwd|awk -F/ '{nlast = NF -1;print $nlast"/"$NF}'
}
chkload () { #gets the current 1m avg CPU load
    local CURRLOAD=`uptime|awk '{print $8}'`
    if [ "$CURRLOAD" > "1" ]; then
        local OUTP="HIGH"
    elif [ "$CURRLOAD" < "1" ]; then
        local OUTP="NORMAL"
    else
        local OUTP="UNKNOWN"
    fi
    echo $CURRLOAD
}
